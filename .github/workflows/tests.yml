# Consider using shorter form of workflow config when testing on
# multiple operating systems (from https://github.com/codecov/codecov-action):
# name: Example workflow for Codecov
#on: [push]
#jobs:
#  run:
#    runs-on: ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
#    env:
#      OS: ${{ matrix.os }}
#      PYTHON: '3.7'
#    steps:
#    - uses: actions/checkout@master
#    - name: Setup Python
#      uses: actions/setup-python@master
#      with:
#        python-version: 3.7
#    - name: Generate coverage report
#      run: |
#        pip install pytest
#        pip install pytest-cov
#        pytest --cov=./ --cov-report=xml
#    - name: Upload coverage to Codecov
#      uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        file: ./coverage.xml
#        flags: unittests
#        env_vars: OS,PYTHON
#        name: codecov-umbrella
#        fail_ci_if_error: true

name: tests

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
  schedule:
    - cron: '23 8 * * *'

jobs:
  tests-ubuntu-18:
    runs-on: ubuntu-18.04
    steps:

    - name: checkout repository
      uses: actions/checkout@master

    - name: create symlink
      run: ln -s $(pwd) ~/sportmonks

    - name: install APT packages
      run: |
        sudo apt-get update
        sudo apt-get install python3-venv
        sudo apt-get install python3-pip

    - name: setup virtual environment
      run: bash setup-venv.sh

    - name: run static code checks
      run: bash ~/sportmonks/run-static-code-checks.sh

    - name: run unit tests
      run: bash ~/sportmonks/run-unit-tests.sh

    - name: run integration tests
      env:
        SPORTMONKS_API_KEY: ${{ secrets.SPORTMONKS_API_KEY }}
      run: bash ~/sportmonks/run-integration-tests.sh

  tests-windows-2019:
    runs-on: windows-2019
    steps:
      - name: checkout repository
        uses: actions/checkout@master

      - uses: actions/setup-python@v1
        with:
          python-version: '3.7.9'
          architecture: 'x64'

      - name: create symlink
        shell: bash
        run: ln -s $(pwd) ~/sportmonks

      - name: setup virtual environment
        shell: bash
        run: ~/sportmonks/setup-venv.sh

      - name: run static code checks
        shell: bash
        run: ~/sportmonks/run-static-code-checks.sh

      - name: run unit tests
        shell: bash
        run: ~/sportmonks/run-unit-tests.sh

      - name: run integration tests
        env:
          SPORTMONKS_API_KEY: ${{ secrets.SPORTMONKS_API_KEY }}
        shell: bash
        run: ~/sportmonks/run-integration-tests.sh

  tests-macos-10-15:
    runs-on: macos-10.15
    steps:

    - name: checkout repository
      uses: actions/checkout@master

    - name: create symlink
      run: ln -s $(pwd) ~/sportmonks

    - name: setup virtual environment
      run: bash setup-venv.sh

    - name: run static code checks
      run: bash ~/sportmonks/run-static-code-checks.sh

    - name: run unit tests
      run: bash ~/sportmonks/run-unit-tests.sh

    - name: run integration tests
      env:
        SPORTMONKS_API_KEY: ${{ secrets.SPORTMONKS_API_KEY }}
      run: bash ~/sportmonks/run-integration-tests.sh

  check-prose:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Vale
      uses: errata-ai/vale-action@v1.3.0
      with:
        # Optional
        styles: |
          https://github.com/errata-ai/Microsoft/releases/latest/download/Microsoft.zip
          https://github.com/errata-ai/write-good/releases/latest/download/write-good.zip

        # Optional
        config: https://raw.githubusercontent.com/errata-ai/vale/master/.vale.ini

        # Optional
        files: ./
      env:
        # Required
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
